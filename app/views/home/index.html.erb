 <link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css"
   integrity="sha512-M2wvCLH6DSRazYeZRIm1JnYyh22purTM+FDB5CsyxtQJYeKq83arPe5wgbNmcFXGqiSH2XR8dT/fJISVA1r/zQ=="
   crossorigin=""/>
    <!-- Make sure you put this AFTER Leaflet's CSS -->
 <script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"
   integrity="sha512-lInM/apFSqyy1o6s89K4iQUKg6ppXEgsVxT35HbzUupEVRh2Eu9Wdl4tHj7dZO0s1uvplcYGmt3498TtHq+log=="
   crossorigin=""></script>

   <style>
        body { margin:0; padding:0; }
        #mapid { position:absolute; top:0; bottom:0; width:100%; }
    </style>
 <nav id="nav-bar">
     <ul>
        <div class="row form-search">
          <div class="form-inline">
          <%= form_tag(hospitals_path, method: "get") do %>
            <%= text_field_tag :location,params[:location], autofocus: true,class: 'form-control',placeholder: 'Search hospital' %>
            <%= text_field_tag :distance,params[:distance],autofocus: true,class: 'form-control',placeholder: 'Enter radius' do %>
                 <select class="custom-select mb-2 mr-sm-2 mb-sm-0 btn btn-default" id="inlineFormCustomSelect">
                          <option selected>Range(km)</option>
                          <option value="1">1</option>
                          <option value="2">5<option>
                          <option value="3">10</option>
                 </select>
            <% end %>
            <%= button_tag(type: 'search',class: 'btn btn-sm btn-primary',:name => nil) do %>
                <span class="glyphicon glyphicon-search"></span>search
             <% end %>
          <% end %>
        </div>
      </div>
    </ul>
     
       <ul class="nav navbar-nav navbar-right dropdown-lift">
        <li class="dropdown">
          <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Settings<span class="caret"></span></a>
          <ul class="dropdown-menu">
                <li><a href="#">Admin Dashboard</a></li>
                <li><%= link_to 'Logout' ,logout_path %></li>
          </ul>
        </li>
      </ul>
  </nav>
  <br>
  <br>
  <p id="notice" class="alert alert-info"><%= notice %></p>

<button id="emergency-switcher" class="btn btn-danger"><span class="glyphicon glyphicon-plus"></span>Emergency</button>
<br>
<br>

 <div id="emergency-register-form">
      <%= load_emergency_form %>
  </div>  


  <div>
    <div id="mapid"></div>
  </div>

  <script>

     var mymap = L.map('mapid').setView([-1.3938636,36.7442377], 13);
     var mapdata =  $.ajax({
            url: '/hospitals.json',
          dataType: 'text',
             success: function(data) {
          var geojson;
          geojson = $.parseJSON(data);

           

          L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
              attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
              maxZoom: 18,
              id: 'mapbox.streets',
              accessToken: 'pk.eyJ1IjoibXVyZWl0aGkyNTQiLCJhIjoiY2o5aGZ2ZHFzMGg5ZTMzczJrbnpoZGR5MCJ9.3tGGvQdQd9ELETOYXgoxEw'
            }).addTo(mymap);
                   

                //Adding custom markers to maps
                var HospIcon = L.icon({
              iconUrl: '<%= asset_path('hospital.png') %>',

              iconSize:     [30, 60], // size of the icon
              iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
              shadowAnchor: [4, 62],  // the same for the shadow
              popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
          });

          var Custom_marker = L.geoJSON(geojson, {
                       pointToLayer : function(feature,latlng){
                          L.marker(latlng, 
                            {icon: HospIcon
                          }).addTo(mymap).on('mouseover', function() {
                                        this.bindPopup(feature.properties.name + '<br>' + feature.properties.address + '<br>' + feature.properties.contact).openPopup();
                                     });
                 }
          });


         //Add popups to markers
          function onEachFeature(feature,layer){
                   if (feature.properties && feature.properties.popupContent) {
                layer.bindPopup(feature.properties.popupContent);
            }
                }
                L.geoJSON(geojson, { onEachFeature: onEachFeature });
            }

    
        });


      var popup = L.popup();

    function onMapClick(e) {
        popup
            .setLatLng(e.latlng)
            .setContent("You clicked the map at " + e.latlng.toString())
            .openOn(mymap);
    }

    mymap.on('click', onMapClick);

</script>


