 <link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css"
   integrity="sha512-M2wvCLH6DSRazYeZRIm1JnYyh22purTM+FDB5CsyxtQJYeKq83arPe5wgbNmcFXGqiSH2XR8dT/fJISVA1r/zQ=="
   crossorigin=""/>
    <!-- Make sure you put this AFTER Leaflet's CSS -->
 <script src="https://unpkg.com/leaflet@1.2.0/dist/leaflet.js"
   integrity="sha512-lInM/apFSqyy1o6s89K4iQUKg6ppXEgsVxT35HbzUupEVRh2Eu9Wdl4tHj7dZO0s1uvplcYGmt3498TtHq+log=="
   crossorigin=""></script>

   <style>
        body { margin:0; padding:0; }
        #mapid { position:absolute; top:0; bottom:0; width:60%;float: left; }
        .dispatch-section { float:left;width: 40%;margin-left: 1100px; }
        
    </style>


  <div>
    <div id="mapid"></div>
  </div>
  <div class="dispatch-section">
    <%= link_to new_emergency_path ,:class => 'btn btn-danger btn-lg' do %>
        <span class="glyphicon glyphicon-plus"></span>New Emergency
    <% end %>
    
     <table class="table table-hover table-hospitals">
        <caption><center><em>Nearest hospitals to the point of emergency</em></center></caption>
        <thead>
          <th>Name</th>
          <th>Address</th>
          <th>Phone</th>
        </thead>
        <tbody>
              <% @hospitals_nearest.each do |nearest_hospitals| %>
               <tr>
                 <td><%= nearest_hospitals.name %></td>
                 <td><%= nearest_hospitals.address %></td>
                 <td><%= nearest_hospitals.phone %></td>
                 <td><a href="#" class="btn btn-danger">Dispatch</a></td>
               </tr>
              <% end %>
        </tbody>
     </table>
  </div>
  
<script>

       var mymap = L.map('mapid').setView([-1.3938636,36.7442377], 13);

    L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox.streets',
        accessToken: 'pk.eyJ1IjoibXVyZWl0aGkyNTQiLCJhIjoiY2o5aGZ2ZHFzMGg5ZTMzczJrbnpoZGR5MCJ9.3tGGvQdQd9ELETOYXgoxEw'
      }).addTo(mymap);
                   
          //Ajax request for the Hospitals data
     var mapdata =  $.ajax({
            url: '/hospitals.json',
          dataType: 'text',
             success: function(data) {
          var geojson;
          geojson = $.parseJSON(data);

                //Adding custom markers to maps
                var HospIcon = L.icon({
              iconUrl: '<%= asset_path('hospital.png') %>',

              iconSize:     [30, 60], // size of the icon
              iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
              shadowAnchor: [4, 62],  // the same for the shadow
              popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
          });

          var Custom_marker = L.geoJSON(geojson, {
                       pointToLayer : function(feature,latlng){
                          L.marker(latlng, 
                            {icon: HospIcon
                          }).addTo(mymap).on('mouseover', function() {
                                        this.bindPopup(feature.properties.name).openPopup();
                                     });
                 }
          });


         //Add popups to markers
          function onEachFeature(feature,layer){
                   if (feature.properties && feature.properties.popupContent) {
                layer.bindPopup(feature.properties.popupContent);
            }
                }
                L.geoJSON(geojson, { onEachFeature: onEachFeature });
            }

    
        });

     //Ajax request for the Emergencies data
       
         var EmergData = $.ajax({
            url: '/emergencies.json',
            dataType: 'text',
            success : function(data){
              var geojson;
              geojson = $.parseJSON(data);

               //Adding custom markers to maps
                var EmergencyIcon = L.icon({
              iconUrl: '<%= asset_path('emergency.png') %>',

              iconSize:     [30, 60], // size of the icon
              iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
              shadowAnchor: [4, 62],  // the same for the shadow
              popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
          });

          var Custom_marker = L.geoJSON(geojson, {
                       pointToLayer : function(feature,latlng){
                          L.marker(latlng, 
                            {icon: EmergencyIcon
                          }).addTo(mymap).on('mouseover', function() {
                                        this.bindPopup(feature.properties.name + '<br>' + feature.properties.description).openPopup();
                                     });
                 }
          });
               
            }
         });






      var popup = L.popup();

    function onMapClick(e) {
        popup
            .setLatLng(e.latlng)
            .setContent("You clicked the map at " + e.latlng.toString())
            .openOn(mymap);
    }

    mymap.on('click', onMapClick);

</script>





























































































































































